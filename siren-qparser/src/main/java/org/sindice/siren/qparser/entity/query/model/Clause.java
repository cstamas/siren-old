/*
 * Generated by classgen, version 1.3
 * 12/04/11 12:12
 */
package org.sindice.siren.qparser.entity.query.model;

public abstract class Clause implements SyntaxNode {

  private org.sindice.siren.search.SirenTupleQuery query;
  private SyntaxNode parent;

  public String getField() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setField(String field) {
    throw new ClassCastException("tried to call abstract method");
  }

  public EClauseList getEclauses() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setEclauses(EClauseList eclauses) {
    throw new ClassCastException("tried to call abstract method");
  }

  public int getOp() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setOp(int op) {
    throw new ClassCastException("tried to call abstract method");
  }

  public KClauseList getKclauses() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setKclauses(KClauseList kclauses) {
    throw new ClassCastException("tried to call abstract method");
  }

  public org.sindice.siren.search.SirenTupleQuery getQuery() {
    return query;
  }

  public void setQuery(org.sindice.siren.search.SirenTupleQuery query) {
    this.query = query;
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public abstract void accept(Visitor visitor);
  public abstract void childrenAccept(Visitor visitor);
  public abstract void traverseTopDown(Visitor visitor);
  public abstract void traverseBottomUp(Visitor visitor);
  public String toString() {
    return toString("");
  }

  public abstract String toString(String tab);
}
