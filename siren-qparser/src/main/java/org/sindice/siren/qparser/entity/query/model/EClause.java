/*
 * Generated by classgen, version 1.3
 * 12/04/11 12:12
 */
package org.sindice.siren.qparser.entity.query.model;

public abstract class EClause implements SyntaxNode {

  private org.sindice.siren.search.SirenCellQuery query;
  private SyntaxNode parent;

  public KClauseList getA() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setA(KClauseList a) {
    throw new ClassCastException("tried to call abstract method");
  }

  public KClauseList getV() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setV(KClauseList v) {
    throw new ClassCastException("tried to call abstract method");
  }

  public int getOp() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setOp(int op) {
    throw new ClassCastException("tried to call abstract method");
  }

  public org.sindice.siren.search.SirenCellQuery getQuery() {
    return query;
  }

  public void setQuery(org.sindice.siren.search.SirenCellQuery query) {
    this.query = query;
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public abstract void accept(Visitor visitor);
  public abstract void childrenAccept(Visitor visitor);
  public abstract void traverseTopDown(Visitor visitor);
  public abstract void traverseBottomUp(Visitor visitor);
  public String toString() {
    return toString("");
  }

  public abstract String toString(String tab);
}
